#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};


int countNodes(struct Node* head) {
    int count = 0;
    struct Node* current = head;


    while (current != NULL) {
        count++;
        current = current->next;
    }

    return count;
}


void insertAtBeginning(struct Node** headRef, int newData) {
   
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode == NULL) {
        fprintf(stderr, "Memory allocation failed\n");
        return;
    }

     newNode->data = newData;
    newNode->next = *headRef;

    
    *headRef = newNode;
}


void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}


int main() {
   
    struct Node* head = NULL;

    
    insertAtBeginning(&head, 10);
    insertAtBeginning(&head, 20);
    insertAtBeginning(&head, 30);
    insertAtBeginning(&head, 40);

   
    printf("Linked List: ");
    printList(head);

 
    int nodeCount = countNodes(head);
    printf("Number of nodes in the linked list: %d\n", nodeCount);

    return 0;
}
