#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 100


struct Stack {
    int items[MAX_SIZE];
    int top;
};


void initializeStack(struct Stack *s) {
    s->top = -1;
}

=
int isFull(struct Stack *s) {
    return s->top == MAX_SIZE - 1;
}


int isEmpty(struct Stack *s) {
    return s->top == -1;
}


void push(struct Stack *s, int value) {
    if (isFull(s)) {
        printf("Stack is full. Cannot push.\n");
        return;
    }
    s->items[++s->top] = value;
}


int pop(struct Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty. Cannot pop.\n");
        return -1;
    }
    return s->items[s->top--];
}


void printBottomTop(struct Stack *s) {
    if (isEmpty(s)) {
        printf("Stack is empty.\n");
        return;
    }

  
    printf("Bottom-most element: %d\n", s->items[0]);

    printf("Top-most element: %d\n", s->items[s->top]);
}

int main() {
    struct Stack stack1, stack2;
    initializeStack(&stack1);
    initializeStack(&stack2);

 
    push(&stack1, 1);
    push(&stack1, 2);
    push(&stack1, 3);

  
    push(&stack2, 4);
    push(&stack2, 5);
    push(&stack2, 6);


    printf("Stack 1:\n");
    printBottomTop(&stack1);

  
    printf("\nStack 2:\n");
    printBottomTop(&stack2);

    return 0;
}
